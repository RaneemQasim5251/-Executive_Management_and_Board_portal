{
  "name": "executive-portal-api",
  "version": "1.0.0",
  "description": "Executive Management Portal - Backend API Server",
  "main": "dist/server.js",
  "scripts": {
    "dev": "nodemon --exec ts-node src/api/server.ts",
    "build": "tsc -p tsconfig.api.json",
    "start": "node dist/server.js",
    "start:prod": "NODE_ENV=production node dist/server.js",
    "test": "jest --config jest.config.js",
    "test:watch": "jest --config jest.config.js --watch",
    "test:coverage": "jest --config jest.config.js --coverage",
    "lint": "eslint src/api/**/*.ts --fix",
    "lint:check": "eslint src/api/**/*.ts",
    "type-check": "tsc --noEmit -p tsconfig.api.json",
    "migrate": "npm run build && node dist/scripts/migrate.js",
    "seed": "npm run build && node dist/scripts/seed.js",
    "docker:build": "docker build -t executive-portal-api .",
    "docker:run": "docker run -p 3001:3001 executive-portal-api",
    "health-check": "curl -f http://localhost:3001/health || exit 1"
  },
  "keywords": [
    "executive",
    "portal",
    "api",
    "backend",
    "nodejs",
    "express",
    "typescript",
    "supabase"
  ],
  "author": "Al Jeri Group",
  "license": "MIT",
  "dependencies": {
    "@supabase/supabase-js": "^2.45.4",
    "express": "^4.18.2",
    "cors": "^2.8.5",
    "helmet": "^7.1.0",
    "express-rate-limit": "^7.1.5",
    "compression": "^1.7.4",
    "bcrypt": "^5.1.1",
    "jsonwebtoken": "^9.0.2",
    "zod": "^3.22.4",
    "winston": "^3.11.0",
    "winston-daily-rotate-file": "^4.7.1",
    "dotenv": "^16.3.1",
    "uuid": "^9.0.1",
    "multer": "^1.4.5-lts.1",
    "aws-sdk": "^2.1493.0",
    "redis": "^4.6.10",
    "bull": "^4.12.2",
    "bullmq": "^4.15.4",
    "ioredis": "^5.3.2",
    "nodemailer": "^6.9.7",
    "openai": "^4.20.1",
    "@anthropic-ai/sdk": "^0.9.1",
    "axios": "^1.6.2",
    "moment": "^2.29.4",
    "moment-timezone": "^0.5.43",
    "validator": "^13.11.0",
    "express-validator": "^7.0.1",
    "express-async-errors": "^3.1.1",
    "http-status-codes": "^2.3.0",
    "lodash": "^4.17.21",
    "csv-parser": "^3.0.0",
    "xlsx": "^0.18.5",
    "sharp": "^0.32.6",
    "pdf-parse": "^1.1.1",
    "node-cron": "^3.0.3",
    "socket.io": "^4.7.4",
    "pg": "^8.11.3",
    "knex": "^3.0.1",
    "@simplewebauthn/server": "^9.0.3",
    "@simplewebauthn/types": "^9.0.1"
  },
  "devDependencies": {
    "@types/express": "^4.17.21",
    "@types/cors": "^2.8.17",
    "@types/compression": "^1.7.5",
    "@types/bcrypt": "^5.0.2",
    "@types/jsonwebtoken": "^9.0.5",
    "@types/uuid": "^9.0.7",
    "@types/multer": "^1.4.11",
    "@types/nodemailer": "^6.4.14",
    "@types/validator": "^13.11.7",
    "@types/lodash": "^4.14.202",
    "@types/node-cron": "^3.0.11",
    "@types/pg": "^8.10.9",
    "typescript": "^5.3.3",
    "ts-node": "^10.9.1",
    "nodemon": "^3.0.2",
    "jest": "^29.7.0",
    "@types/jest": "^29.5.8",
    "ts-jest": "^29.1.1",
    "supertest": "^6.3.3",
    "@types/supertest": "^2.0.16",
    "eslint": "^8.56.0",
    "@typescript-eslint/parser": "^6.14.0",
    "@typescript-eslint/eslint-plugin": "^6.14.0",
    "prettier": "^3.1.1",
    "husky": "^8.0.3",
    "lint-staged": "^15.2.0",
    "@commitlint/cli": "^18.4.3",
    "@commitlint/config-conventional": "^18.4.3"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/aljeri-group/executive-portal.git"
  },
  "bugs": {
    "url": "https://github.com/aljeri-group/executive-portal/issues"
  },
  "homepage": "https://github.com/aljeri-group/executive-portal#readme",
  "lint-staged": {
    "src/api/**/*.{ts,tsx}": [
      "eslint --fix",
      "prettier --write"
    ]
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged",
      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS"
    }
  },
  "jest": {
    "preset": "ts-jest",
    "testEnvironment": "node",
    "roots": ["<rootDir>/src/api"],
    "testMatch": ["**/__tests__/**/*.ts", "**/?(*.)+(spec|test).ts"],
    "collectCoverageFrom": [
      "src/api/**/*.ts",
      "!src/api/**/*.d.ts",
      "!src/api/**/*.test.ts",
      "!src/api/**/*.spec.ts"
    ],
    "coverageDirectory": "coverage",
    "coverageReporters": ["text", "lcov", "html"],
    "setupFilesAfterEnv": ["<rootDir>/src/api/tests/setup.ts"]
  }
}
